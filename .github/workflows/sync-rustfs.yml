name: Sync to rustfs Storage

on:
  workflow_run:
    workflows: ["Generate Draw.io Images"]
    types:
      - completed
  workflow_dispatch:

jobs:
  sync-files:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch || github.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq openssl xxd python3 python3-pip
          pip3 install boto3
      
      - name: Sync files to rustfs
        env:
          RUSTFS_ENDPOINT: ${{ secrets.RUSTFS_ENDPOINT }}
          RUSTFS_ACCESS_KEY: ${{ secrets.RUSTFS_ACCESS_KEY }}
          RUSTFS_SECRET_KEY: ${{ secrets.RUSTFS_SECRET_KEY }}
          RUSTFS_BUCKET: "itc"
        run: |
          # Check if required secrets are available
          if [ -z "$RUSTFS_ENDPOINT" ] || [ -z "$RUSTFS_ACCESS_KEY" ] || [ -z "$RUSTFS_SECRET_KEY" ]; then
            echo "Missing required secrets for rustfs authentication"
            echo "Please set RUSTFS_ENDPOINT, RUSTFS_ACCESS_KEY, and RUSTFS_SECRET_KEY"
            exit 1
          fi
          
          # Function to upload a file to rustfs using boto3 for AWS4 signature
          upload_file() {
            local file_path="$1"
            local file_name=$(basename "$file_path")
            
            echo "Uploading $file_path to rustfs bucket $RUSTFS_BUCKET"
            
            # Run the Python script
            python3 .github/workflows/upload_file.py "$file_path" "$file_name"
          }
          
          # Upload all .drawio and generated image files
          find . -name "*.drawio" -type f | while read file; do
            upload_file "$file"
            
            # Upload corresponding generated files if they exist
            base_name="${file%.drawio}"
            for ext in "drawio.png" "drawio.jpg" "drawio.svg"; do
              image_file="${base_name}.${ext}"
              if [ -f "$image_file" ]; then
                upload_file "$image_file"
              fi
            done
          done
          
          echo "File sync completed"