name: Generate Draw.io Images

on:
  push:
    branches: [ main ]
    paths:
      - '**.drawio'
  workflow_dispatch:

jobs:
  generate-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
      
      - name: Install drawio-desktop and Chinese fonts
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb fonts-noto-cjk fonts-wqy-zenhei fonts-wqy-microhei locales
          # Generate and set up Chinese locale
          sudo locale-gen zh_CN.UTF-8
          sudo update-locale LANG=zh_CN.UTF-8
          export DRAWIO_VERSION=28.1.2
          wget https://github.com/jgraph/drawio-desktop/releases/download/v$DRAWIO_VERSION/drawio-amd64-$DRAWIO_VERSION.deb
          sudo dpkg -i drawio-amd64-$DRAWIO_VERSION.deb || sudo apt-get -f install -y
          sudo rm -rf drawio-amd64-$DRAWIO_VERSION.deb
      
      - name: Generate images from Draw.IO files
        run: |
          # Set font configuration for Chinese characters
          export FONTCONFIG_PATH=/etc/fonts
          export LANG=zh_CN.UTF-8
          export LANGUAGE=zh_CN:zh
          export LC_ALL=zh_CN.UTF-8
          
          # Find all .drawio files
          find . -name "*.drawio" -type f | while read file; do
            echo "Processing $file"
            base_name="${file%.drawio}"
            
            # Generate PNG with better font support
            xvfb-run -a drawio --export --format png --scale 2 --border 10 "$file" --output "${base_name}.drawio.png"
            
            # Generate JPG with better font support
            xvfb-run -a drawio --export --format jpg --scale 2 --border 10 --quality 80 "$file" --output "${base_name}.drawio.jpg"
            
            # Generate SVG with better font support
            xvfb-run -a drawio --export --format svg --embed-svg-images --border 10 "$file" --output "${base_name}.drawio.svg"

          done

          # List directory files
          ls -lR .
      
      - name: Remove orphaned image files
        run: |
          # Find and remove image files without corresponding .drawio files
          find . -name "*.drawio.png" -type f | while read png_file; do
            drawio_file="${png_file%.png}"
            if [ ! -f "$drawio_file" ]; then
              echo "Removing orphaned PNG: $png_file"
              rm "$png_file"
            fi
          done
          
          find . -name "*.drawio.jpg" -type f | while read jpg_file; do
            drawio_file="${jpg_file%.jpg}"
            if [ ! -f "$drawio_file" ]; then
              echo "Removing orphaned JPG: $jpg_file"
              rm "$jpg_file"
            fi
          done
          
          find . -name "*.drawio.svg" -type f | while read svg_file; do
            drawio_file="${svg_file%.svg}"
            if [ ! -f "$drawio_file" ]; then
              echo "Removing orphaned SVG: $svg_file"
              rm "$svg_file"
            fi
          done
      
      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add all changed files
          git add -A
          
          # Check if there are changes to commit
          if ! git diff --cached --quiet; then
            git commit -m "Auto-generate images from Draw.io files
            
            ðŸ¤– Generated with [Claude Code](https://claude.ai/code)
            
            Co-Authored-By: Claude <noreply@anthropic.com>"
            git push
          else
            echo "No changes to commit"
          fi